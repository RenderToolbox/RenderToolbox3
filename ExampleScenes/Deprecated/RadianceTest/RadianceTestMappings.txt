Collada {
    % forget any 4x4 camera transformation from Blender
    Camera:matrix|sid=transform = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1

    % move the camera with distinct transformations (in order!)
    % swap camera handedness from Blender's Collada output
    Camera:translate|sid=location = 0 (cameraY) (cameraZ)
    Camera:rotate|sid=rotationX = 1 0 0 (cameraXRot)
    Camera:scale|sid=scale = -1 1 1

    % move the lights
    %   make sure the AreaLight is behind Point light
    %   area rotated 180 degrees in blender, so it moves backwards
    Point:translate|sid=location = 0 0 (lightDistance)
    AreaLight:translate|sid=location = 0 0 -(lightDistance)
    AreaLight:translate|sid=nudge = 0 0 -0.1

    % move the reflector
    Reflector:rotate|sid=rotationX = 1 0 0 (reflectorXRot)

    % resize the area light
    AreaLight:scale|sid=scale = (lightRadius) (lightRadius) 1
}

% specify a matte target and non-reflecting area light
Generic {
    % white matte square
    Material-material:material:matte
    Material-material:diffuseReflectance.spectrum = 300:1 800:1

    % all black disk which can be an area light
    AreaLight-material:material:matte
    AreaLight-material:diffuseReflectance.spectrum = 300:0 800:0
}

% specify the color of the point light
Generic pointLightGroup {
    % white light source
    Point-light:light:point
    Point-light:intensity:spectrum = (lightSpectrum)
}

% swap in an area light instead of the point light
Generic areaLightGroup {
    % shut off the point light
    Point-light:light:point
    Point-light:intensity:spectrum = 300:0 800:0

    % light up the disk just behind the point light
    AreaLight-mesh:light:area
    AreaLight-mesh:intensity.spectrum = (lightSpectrum)
}